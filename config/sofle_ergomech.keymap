/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT_LAYER 0
#define IOS_LAYER 1
#define ARROWS_LAYER 2
#define BLUETOOTH_SYMBOL_LAYER 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        ios_arrow_layer {
            if-layers = <1 3>;
            then-layer = <4>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_bluetooth_symbols_layer_left {
            bindings = <&mo 5>;
            key-positions = <29 27>;
            layers = <0 1>;
        };

        // TODO: do I need this anymore? Now there is an IOS layer?

        combo_right_alt {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <18 20>;
        };

        combo_bluetooth_symbols_layer_right {
            bindings = <&mo 5>;
            key-positions = <30 32>;
            layers = <0 1>;
        };

        combo_caps_word {
            bindings = <&caps_word>;
            key-positions = <36 47>;
            layers = <0 1>;
        };
    };

    macros {
        ios_layer_toggle: ios_layer_toggle {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings =
                <&macro_param_1to2>,
                <&macro_tap>,
                <&bt BT_SEL MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to 1>;
        };

        default_layer_toggle: default_layer_toggle {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings =
                <&macro_param_1to2>,
                <&macro_tap>,
                <&bt BT_SEL MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to 0>;
        };

        mac_layer_toggle: mac_layer_toggle {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings =
                <&macro_param_1to2>,
                <&macro_tap>,
                <&bt BT_SEL MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to 2>;

            label = "MAC_LAYER_TOGGLE";
        };
    };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-caps-word";
            label = "NEW_BEHAVIOR";
            #binding-cells = <0>;
            continue-list = <UNDERSCORE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp EQUAL   &kp N1     &kp N2    &kp N3         &kp N4            &kp N5        &kp N6             &kp N7            &kp N8         &kp N9         &kp N0          &kp MINUS
&kp TAB     &kp Q      &kp W     &kp E          &kp R             &kp T         &kp Y              &kp U             &kp I          &kp O          &kp P           &kp BACKSLASH
&kp ESCAPE  &kp A      &kp S     &kp D          &kp F             &kp G         &kp H              &kp J             &kp K          &kp L          &kp SEMI        &kp SQT
&kp LSHFT   &kp Z      &kp X     &kp C          &kp V             &kp B         &kp N              &kp M             &kp COMMA      &kp DOT        &kp FSLH        &kp RSHFT
&kp C_MUTE  &kp GRAVE  &kp LALT  &kp BACKSPACE  &kp LEFT_CONTROL  &kp LEFT_GUI  &kp RIGHT_CONTROL  &kp ENTER         &kp SPACE      &mo 3          &kp RGUI
                                                                                &kp ENTER          &kp C_AC_FORWARD  &kp K_REFRESH  &kp C_AC_BACK  &kp C_AC_CLOSE
            >;

            sensor-bindings =
                <&inc_dec_kp PAGE_DOWN PAGE_UP>,
                <&inc_dec_kp PG_UP PG_UP>;
        };

        ios_layer {
            label = "ios";
            bindings = <
&kp EQUAL   &kp N1     &kp N2            &kp N3         &kp N4            &kp N5        &kp N6         &kp N7            &kp N8         &kp N9         &kp N0          &kp MINUS
&kp TAB     &kp Q      &kp W             &kp E          &kp R             &kp T         &kp Y          &kp U             &kp I          &kp O          &kp P           &kp BACKSLASH
&kp ESCAPE  &kp A      &kp S             &kp D          &kp F             &kp G         &kp H          &kp J             &kp K          &kp L          &kp SEMI        &kp SQT
&kp LSHFT   &kp Z      &kp X             &kp C          &kp V             &kp B         &kp N          &kp M             &kp COMMA      &kp DOT        &kp FSLH        &kp RSHFT
&kp C_MUTE  &kp GRAVE  &kp LEFT_COMMAND  &kp BACKSPACE  &kp LEFT_CONTROL  &kp LEFT_GUI  &kp RIGHT_ALT  &kp ENTER         &kp SPACE      &mo 3          &kp RGUI
                                                                                        &kp ENTER      &kp C_AC_FORWARD  &kp K_REFRESH  &kp C_AC_BACK  &kp C_AC_CLOSE
            >;

            sensor-bindings =
                <&inc_dec_kp PAGE_DOWN PAGE_UP>,
                <&inc_dec_kp PG_UP PG_UP>;
        };

        Mac_layer {
            label = "mac";
            bindings = <
&kp EQUAL   &kp N1     &kp N2        &kp N3         &kp N4            &kp N5            &kp N6         &kp N7            &kp N8         &kp N9         &kp N0          &kp MINUS
&kp TAB     &kp Q      &kp W         &kp E          &kp R             &kp T             &kp Y          &kp U             &kp I          &kp O          &kp P           &kp BACKSLASH
&kp ESCAPE  &kp A      &kp S         &kp D          &kp F             &kp G             &kp H          &kp J             &kp K          &kp L          &kp SEMI        &kp SQT
&kp LSHFT   &kp Z      &kp X         &kp C          &kp V             &kp B             &kp N          &kp M             &kp COMMA      &kp DOT        &kp FSLH        &kp RSHFT
&kp C_MUTE  &kp GRAVE  &kp LEFT_ALT  &kp BACKSPACE  &kp LEFT_COMMAND  &kp LEFT_CONTROL  &kp RIGHT_ALT  &kp ENTER         &kp SPACE      &mo 3          &kp RGUI
                                                                                        &kp ENTER      &kp C_AC_FORWARD  &kp K_REFRESH  &kp C_AC_BACK  &kp C_AC_CLOSE
            >;

            sensor-bindings =
                <&inc_dec_kp PAGE_DOWN PAGE_UP>,
                <&inc_dec_kp PG_UP PG_UP>;
        };

        arrows_layer {
            label = "arrows";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp F1  &kp F2      &kp F3     &kp F4      &kp F5       &kp F6     &kp F7          &kp F8    &kp F9        &kp F10    &kp F11   &kp F12
&trans  &kp N1      &kp N2     &kp N3      &kp N4       &kp N5     &kp N6          &kp N7    &kp N8        &kp N9     &kp N0    &kp F12
&trans  &kp EXCL    &kp AT     &kp HASH    &kp DLLR     &kp PRCNT  &kp LEFT        &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans    &trans
&trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &trans     &studio_unlock  &kp RBKT  &kp SEMI      &kp COLON  &kp BSLH  &trans
&trans  &trans      &trans     &trans      &trans       &trans     &trans          &trans    &trans        &trans     &trans
                                                                   &kp A           &kp B     &kp C         &kp D      &kp E
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        ios_arrows_layer {
            label = "ios arrows";
            bindings = <
&trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp LEFT_ALT  &trans  &trans  &trans  &trans  &trans  &trans
                                                      &trans  &trans  &trans  &trans  &trans
            >;
        };

        bluetooth_symbol_layer {
            label = "bluetooth / symbols";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&trans  &default_layer_toggle 0  &default_layer_toggle 1  &ios_layer_toggle 2  &ios_layer_toggle 3  &mac_layer_toggle 4  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2   &bt BT_DISC 3    &bt BT_DISC 4  &bt BT_CLR
&trans  &soft_off                &kp PSCRN                &kp K_CMENU          &trans               &trans               &trans         &out OUT_TOG   &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans         &trans
&trans  &kp LALT                 &kp LCTRL                &kp LSHFT            &trans               &kp CLCK             &trans         &trans         &kp LBKT        &kp RBKT         &trans         &trans
&trans  &kp K_UNDO               &kp K_CUT                &kp K_COPY           &kp K_PASTE          &trans               &trans         &trans         &trans          &trans           &trans         &trans
&trans  &trans                   &trans                   &kp DELETE           &kp LEFT_CONTROL     &trans               &trans         &trans         &trans          &trans           &trans
                                                                                                                         &kp A          &kp B          &kp C           &kp D            &kp E
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF  &none  &none  &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none            &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &none  &none  &none  &none  &none  &none
&rgb_ug RGB_TOG    &none            &none            &none            &none            &none            &none  &none  &none  &none  &none
                                                                                                        &kp A  &kp B  &kp C  &kp D  &kp E
            >;
        };
    };
};
